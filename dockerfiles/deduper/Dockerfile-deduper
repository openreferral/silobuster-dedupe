FROM ubuntu:kinetic-20221101

# Update and clean up the install. Then add common repositories

RUN apt-get update && apt-get autoremove && apt-get autoclean && \
    apt-get install curl -y software-properties-common -y

# Install my favorite libraries and some nifty tools
# A lot of these libraries can be removed. You can also use an alpine version. I 
# typically install everything I will ever need while I am still developing out my 
# containers.
# RUN add-apt-repository ppa:deadsnakes/ppa
ENV TZ="America/New_York"

RUN apt-get update && \
    apt-get install -yq tzdata && \
    ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime && \
    dpkg-reconfigure -f noninteractive tzdata

RUN apt update && \
    apt-get install apt-utils -y \
    libffi-dev \
    libssl-dev \
    libxml2-dev \
    libxslt-dev \
    libjpeg-dev \
    libfreetype6-dev \
    zlib1g-dev \
    net-tools \
    nano \
    python3.10 -y \
    python3-pip -y \
    libpq-dev \
    iputils-ping -y && \
    apt update -y && \
    apt-get install wget && \
    wget -qO - https://packages.confluent.io/deb/6.1/archive.key | apt-key add - && \
    add-apt-repository "deb [arch=amd64] https://packages.confluent.io/deb/6.1 stable main" && \
    add-apt-repository "deb [arch=amd64] https://packages.confluent.io/deb/6.1 stable main" && \
    apt-get install librdkafka-dev -y && \
    apt-get update -y && \
    apt-get install sshpass -y && \
    apt install vim -y && \
    apt-get install ipython3 -y && \
    mkdir /custom

# RUN apt-get install -y librdkafka++1 && apt update && apt-get update

# Install rust. This is required to use the cryptography package. You will need it if you fillow my JWT token 
# implementation.
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | bash -s -- -y && apt-get update && apt update 
RUN pip3 install --upgrade pip setuptools


WORKDIR /init-container

# Install python dependencies
COPY requirements-deduper.txt /init-container/
RUN pip3 install -r requirements-deduper.txt

ARG PROJECT=deduper
ENV PROJECT_DIR=/var/www/${PROJECT}
RUN mkdir -p ${PROJECT_DIR}
WORKDIR ${PROJECT_DIR}
ENV PYTHONPATH "${PYTHONPATH}:${PROJECT_DIR}"

########################################################

COPY entrypoint-deduper.sh /sbin/entrypoint-deduper.sh
RUN chmod 755 /sbin/entrypoint-deduper.sh